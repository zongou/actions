name: Build vscode server
run-name: Build vscode server commit:${{ github.event.inputs.commit }}
on:
  workflow_dispatch:
    inputs:
      commit:
        description: "git commit:"
        default: 1a5daa3a0231a0fbba4f14db7ec463cf99d7768e
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        tasks: [vscode-reh-web-linux-x64-min, vscode-reh-web-linux-arm64-min]

    steps:
      - uses: actions/checkout@main
      - name: Install dependencies
        run: |
          node -v
          sudo apt update || true
          sudo apt install build-essential g++ libx11-dev libxkbfile-dev libsecret-1-dev libkrb5-dev python-is-python3
          yarn global add node-gyp

      - name: Fetch source code and patch
        run: |
          git clone https://github.com/microsoft/vscode
          cd vscode
          git checkout ${{ github.event.inputs.commit }}

      - name: Build
        working-directory: vscode
        run: |
          # # Electron and browsers are not required
          # # for code-server build.
          export ELECTRON_SKIP_BINARY_DOWNLOAD=1
          export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1

          ## Cross build
          case "${{ matrix.tasks }}" in
          *-linux-x64-*);;
          *-linux-arm64-*)
            TARGET=aarch64-linux-gnu
            SYSROOT=${PWD}/../aarch64-linux-ubuntu

            sudo apt install qemu-user-static binfmt-support debootstrap
            sudo debootstrap --variant=minbase --arch=arm64 --include=libx11-dev stable "${SYSROOT}" http://deb.debian.org/debian/

            sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
            export CC="$(which ${TARGET}-gcc) --sysroot=${SYSROOT}"
            export CXX="$(which ${TARGET}-g++) -L${SYSROOT}/usr/lib/${TARGET} --sysroot=${SYSROOT}"
            # export LD="$(which ${TARGET}-ld) --sysroot=${SYSROOT}"
            ;;
          esac

          # aarch64-linux-gnu-g++: error: unrecognized command-line option ‘-m64’
          git clean -xdf
          yarn
          yarn gulp ${{ matrix.tasks }}

      - name: Test output
        run: |
          tree -L 1

      - name: Package
        run: |
          find -maxdepth 1 -name "vscode-*" -type d | while IFS= read -r dir; do
            tar -c "${dir}" | xz -T0 > "${dir}".tar.xz
          done

      - name: Upload
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.tasks }}
          path: vscode-*.tar.xz
